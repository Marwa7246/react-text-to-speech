{"version":3,"sources":["SpeechSpeedSetter.js","appEnums.js","LanguageSelect.js","TextToSpeech.js","App.js","index.js"],"names":["StyledSlider","styled","Slider","_templateObject","StepSlider","_ref","value","setValue","react_default","a","createElement","react","min","max","step","onChange","event","FormHelperText_default","LANGUAGES","CODE","NAME","DEFAULTS","SPEED","TEXT","SPEECH","StyledFormControl","FormControl","LanguageSelect_templateObject","LanguageSelect","InputLabel_default","htmlFor","Select_default","target","inputProps","name","id","map","LAN","MenuItem_default","key","StyledTextField","TextField","TextToSpeech_templateObject","TextToSpeech","label","margin","multiline","rows","variant","apiKey","process","REACT_APP_API_KEY","App","_useState","useState","_useState2","Object","slicedToArray","language","setLanguage","_useState3","_useState4","speed","setSpeed","_useState5","_useState6","text","setText","_useState7","_useState8","speech","setSpeech","className","Grid_default","container","spacing","item","xs","src_LanguageSelect","SpeechSpeedSetter","src_TextToSpeech","Button_default","color","onClick","audioSrc","concat","autoPlay","src","ReactDOM","render","src_App","document","getElementById"],"mappings":"8XAQA,IAAMA,EAAeC,YAAOC,IAAPD,CAAHE,KA0BHC,EAlBI,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,SAI1B,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACV,EAAD,CACEM,MAAOA,EACPM,IAAK,EACLC,IAAK,GACLC,KAAM,EACNC,SATe,SAACC,EAAOV,GAAR,OAAkBC,EAASD,MAW5CE,EAAAC,EAAAC,cAACO,EAAAR,EAAD,qCAA8CH,yEC7BvCY,EAAY,CACvB,CACEC,KAAM,QACNC,KAAM,2BAER,CACED,KAAM,QACNC,KAAM,mBAER,CACED,KAAM,QACNC,KAAM,mBAKGC,EAAW,CACtBH,UAAWA,EAAU,GAAGC,KACxBG,MAAO,EACPC,KAAM,yBACNC,OAAQ,oGCRV,IAAMC,EAAoBxB,YAAOyB,IAAPzB,CAAH0B,KA4BRC,EAxBQ,SAAAvB,GAAuB,IAArBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,SAI9B,OACEC,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAYqB,QAAQ,mBAApB,mBACAtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACEH,MAAOA,EACPS,SAPe,SAACC,GAAD,OAAWT,EAASS,EAAMgB,OAAO1B,QAQhD2B,WAAY,CACVC,KAAM,WACNC,GAAI,oBAIJjB,EAAUkB,IAAI,SAAAC,GAAG,OAAI7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAU8B,IAAKF,EAAIlB,KAAMb,MAAO+B,EAAIlB,MAAOkB,EAAIjB,SAGxEZ,EAAAC,EAAAC,cAACO,EAAAR,EAAD,uJC7BN,IAAM+B,EAAkBvC,YAAOwC,IAAPxC,CAAHyC,KAsBNC,EAlBM,SAAAtC,GAAuB,IAArBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,SAI5B,OACEC,EAAAC,EAAAC,cAAC8B,EAAD,CACEL,GAAG,gBACHS,MAAM,iBACNtC,MAAOA,EACPS,SAPiB,SAACC,GAAD,OAAWT,EAASS,EAAMgB,OAAO1B,QAQlDuC,OAAO,SACPC,WAAS,EACTC,KAAK,IACLC,QAAQ,gDCXRC,SAASC,6DAAYC,mBAwDZC,MAtDf,WAAgB,IAAAC,EACkBC,mBAASjC,EAASH,WADpCqC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACGI,EADHJ,EAAA,GAAAK,EAEYN,mBAASjC,EAASC,OAF9BuC,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEPE,EAFOD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGUV,mBAASjC,EAASE,MAH5B0C,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGPE,EAHOD,EAAA,GAGDE,EAHCF,EAAA,GAAAG,EAIcd,mBAASjC,EAASG,QAJhC6C,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAIPE,EAJOD,EAAA,GAICE,EAJDF,EAAA,GAcd,OACE7D,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAAA,MAAI8D,UAAU,cAAd,iDAEEhE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,OACbhE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMiE,WAAS,EAACC,QAAS,IACvBnE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMmE,MAAI,EAACC,GAAI,GACbrE,EAAAC,EAAAC,cAACoE,EAAD,CAAgBxE,MAAOoD,EAAUnD,SAAUoD,KAE7CnD,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMmE,MAAI,EAACC,GAAI,GACbrE,EAAAC,EAAAC,cAACqE,EAAD,CAAmBzE,MAAOwD,EAAOvD,SAAUwD,KAE7CvD,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMmE,MAAI,EAACC,GAAI,IACbrE,EAAAC,EAAAC,cAACsE,EAAD,CAAc1E,MAAO4D,EAAM3D,SAAU4D,KAEvC3D,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMmE,MAAI,EAACC,GAAI,IACbrE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CACEuC,QAAQ,YACRkC,MAAM,UACNC,QA5BU,WAElB,IAAMC,EAAQ,gCAAAC,OAAmCpC,EAAnC,QAAAoC,OAAgD3B,EAAhD,SAAA2B,OAAgEnB,EAAhE,OAAAmB,OAA0EvB,GAGxFS,EAAUa,KAoBJ,oBAQF5E,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMmE,MAAI,EAACC,GAAI,IACbrE,EAAAC,EAAAC,cAAA,SAAO4E,UAAQ,EAACC,IAAKjB,SChD/BkB,IAASC,OAAOjF,EAAAC,EAAAC,cAACgF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c7bead93.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport styled from 'styled-components';\n\nimport Slider from '@material-ui/lab/Slider';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\n\nconst StyledSlider = styled(Slider)`\n  && {\n    padding-bottom: 4px;\n    padding-top: 46px;\n    width: 100%;\n  }\n`;\n\nconst StepSlider = ({value, setValue}) => {\n\n  const handleChange = (event, value) => setValue(value);\n  \n  return (\n    <Fragment>\n      <StyledSlider\n        value={value}\n        min={0}\n        max={10}\n        step={1}\n        onChange={handleChange}\n      />\n      <FormHelperText>Select text to speech speed: {value}</FormHelperText>\n    </Fragment>\n  );\n}\n\nexport default StepSlider;","export const LANGUAGES = [\n  {\n    CODE: 'en-us',\n    NAME: 'English (United States)'\n  },\n  {\n    CODE: 'fr-fr',\n    NAME: 'French (France)'\n  },\n  {\n    CODE: 'fr-ca',\n    NAME: 'French(Canada)'\n  },\n\n];\n\nexport const DEFAULTS = {\n  LANGUAGES: LANGUAGES[0].CODE,\n  SPEED: 0,\n  TEXT: 'Type text to speech...',\n  SPEECH: null\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { LANGUAGES } from './appEnums';\n\nconst StyledFormControl = styled(FormControl)`\n  && { width: 100%; }\n`\n\nconst LanguageSelect = ({value, setValue}) => {\n\n  const handleChange = (event) => setValue(event.target.value);\n\n  return (\n    <StyledFormControl>\n      <InputLabel htmlFor=\"language-select\">Language Select</InputLabel>\n      <Select\n        value={value}\n        onChange={handleChange}\n        inputProps={{\n          name: 'language',\n          id: 'language-select',\n        }}\n      >\n        {\n          LANGUAGES.map(LAN => <MenuItem key={LAN.CODE} value={LAN.CODE}>{LAN.NAME}</MenuItem>)\n        }\n      </Select>\n      <FormHelperText>Please choose output language</FormHelperText>\n    </StyledFormControl>\n  );\n};\n\nexport default LanguageSelect;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst StyledTextField = styled(TextField)`\n  && { width: 100%; }\n`\n\nconst TextToSpeech = ({value, setValue}) => {\n\n  const handleChange = (event) => setValue(event.target.value);\n\n  return (\n    <StyledTextField\n      id=\"standard-name\"\n      label=\"Text to speech\"\n      value={value}\n      onChange={handleChange}\n      margin=\"normal\"\n      multiline\n      rows=\"4\"\n      variant=\"outlined\"\n  />\n  )\n};\n\nexport default TextToSpeech;","import React, { useState } from 'react';\n\nimport SpeechSpeedSetter from './SpeechSpeedSetter';\nimport LanguageSelect from './LanguageSelect';\nimport TextToSpeech from './TextToSpeech';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport { DEFAULTS } from './appEnums';\nimport './index.css';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nfunction App () {\n  const [language, setLanguage] = useState(DEFAULTS.LANGUAGES);\n  const [speed, setSpeed] = useState(DEFAULTS.SPEED);\n  const [text, setText] = useState(DEFAULTS.TEXT);\n  const [speech, setSpeech] = useState(DEFAULTS.SPEECH);\n\n  const handleClick = () => {\n\n    const audioSrc = `http://api.voicerss.org/?key=${apiKey}&hl=${language}&src=${text}&r=${speed}`\n\n\n    setSpeech(audioSrc);\n  };\n\n  return (    \n    <div>      \n  \n  <h1 className='app-header'>Application for text to speech transformation</h1>\n\n    <div className='app'>\n      <Grid container spacing={16}>\n        <Grid item xs={6}>\n          <LanguageSelect value={language} setValue={setLanguage} />\n        </Grid>\n        <Grid item xs={6}>\n          <SpeechSpeedSetter value={speed} setValue={setSpeed} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextToSpeech value={text} setValue={setText} />\n        </Grid>\n        <Grid item xs={12}>\n          <Button \n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleClick}\n          >\n            Click To Speech\n          </Button>\n        </Grid>\n        <Grid item xs={12} >\n          <audio autoPlay src={speech}></audio> \n        </Grid>\n      </Grid>\n    </div>\n    </div>\n  );\n}\n\n// const StyledApp = styled(App)`\n//   max-width: 640px;\n//   margin: 0 auto;\n//   padding-top: 40px;\n// `\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}